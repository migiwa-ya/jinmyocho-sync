name: Sync sources & index (changed repos only)

on:
  schedule:
    - cron: "0 15 * * *"
  workflow_dispatch:

env:
  DATA_REPOS: |
    migiwa-ya/dataset-shrines
    migiwa-ya/dataset-deities
    migiwa-ya/dataset-cities

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      repo_matrix: ${{ steps.make.outputs.matrix }}
    steps:
      - name: Restore SHA cache
        id: cache
        uses: actions/cache@v4
        with:
          path: .sha
          key: sha-cache-${{ github.run_id }}
          restore-keys: |
            sha-cache-

      - id: make
        shell: bash
        env: { GH_HEADER: "Authorization: Bearer ${{ github.token }}" }
        run: |
          set -euo pipefail
          mkdir -p .sha
          changed=()
          while IFS= read -r repo; do
            [[ -z "$repo" ]] && continue
            latest=$(curl -s -H "$GH_HEADER" \
                     "https://api.github.com/repos/${repo}/commits?per_page=1" \
                     | jq -r '.[0].sha // empty')
            [[ -z "$latest" ]] && { echo "::warning::HEAD SHA empty for $repo"; continue; }

            cache=".sha/$(echo $repo | tr / _).sha"
            prev=$(cat "$cache" 2>/dev/null || echo "")
            echo "$latest" > "$cache"

            echo "repo=$repo  prev=${prev:0:7}  head=${latest:0:7}"

            [[ "$latest" != "$prev" ]] && \
              changed+=("{\"repo\":\"$repo\",\"prev\":\"$prev\",\"head\":\"$latest\"}")
          done <<< "$DATA_REPOS"

          if (( ${#changed[@]} )); then
            printf -v joined '%s,' "${changed[@]}"
            matrix_json='{"include":['"${joined%,}"']}'
            echo "matrix=$matrix_json" >> $GITHUB_OUTPUT
            echo "::notice::matrix_json=$matrix_json"
          fi

          echo "::group::.sha contents"; ls -l .sha; echo "::endgroup::"

      - name: Save SHA cache
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: .sha
          key: sha-cache-${{ github.run_id }}

      - name: Dump outputs
        run: |
          echo "repo_matrix='${{ steps.make.outputs.matrix }}'"

  upload_source:
    needs: detect
    if: needs.detect.outputs.repo_matrix != ''
    strategy:
      matrix: ${{ fromJson(needs.detect.outputs.repo_matrix) }}
    runs-on: ubuntu-latest
    env:
      GIT_HEAD_REF: ${{ matrix.head }}
      GIT_BASE_REF: ${{ matrix.prev }}
      GITHUB_TOKEN: ${{ github.token }}
      GITHUB_REPO: ${{ matrix.repo }}
      R2_ACCESS_KEY: ${{ secrets.R2_ACCESS_KEY }}
      R2_SECRET_KEY: ${{ secrets.R2_SECRET_KEY }}
      R2_ENDPOINT: ${{ vars.R2_ENDPOINT }}
      R2_BUCKET: ${{ vars.R2_BUCKET }}
      CLOUDFLARE_ZONE_ID: ${{ vars.CLOUDFLARE_ZONE_ID }}
      CLOUDFLARE_CDN_ORIGIN: ${{ vars.CLOUDFLARE_CDN_ORIGIN }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 22 }
      - run: npm ci
        working-directory: ${{ github.workspace }}
      - uses: actions/checkout@v4
        with:
          repository: ${{ matrix.repo }}
          path: repo
          fetch-depth: 0
      - name: Upload source to R2
        run: >
          npx tsx scripts/upload-source.ts

  upload_index:
    needs:
      - detect
      - upload_source
    strategy:
      matrix: ${{ fromJson(needs.detect.outputs.repo_matrix) }}
    runs-on: ubuntu-latest
    env:
      GIT_HEAD_REF: ${{ matrix.head }}
      GIT_BASE_REF: ${{ matrix.prev }}
      GITHUB_TOKEN: ${{ github.token }}
      GITHUB_REPO: ${{ matrix.repo }}
      R2_ACCESS_KEY: ${{ secrets.R2_ACCESS_KEY }}
      R2_SECRET_KEY: ${{ secrets.R2_SECRET_KEY }}
      R2_ENDPOINT: ${{ vars.R2_ENDPOINT }}
      R2_BUCKET: ${{ vars.R2_BUCKET }}
      CLOUDFLARE_ZONE_ID: ${{ vars.CLOUDFLARE_ZONE_ID }}
      CLOUDFLARE_CDN_ORIGIN: ${{ vars.CLOUDFLARE_CDN_ORIGIN }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 22 }
      - run: npm ci
        working-directory: ${{ github.workspace }}
      - uses: actions/checkout@v4
        with:
          repository: ${{ matrix.repo }}
          path: repo
          fetch-depth: 0
      - name: Upload index to R2
        run: >
          npx tsx scripts/upload-index.ts
